{
	"id": "3a8606f649949b24796fa08dc3ec743e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ExampleContract.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.17;\r\n\r\ncontract ExampleContract {\r\n    address private  owner;\r\n   \r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n     modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not owner\");\r\n        // Underscore is a special character only used inside\r\n        // a function modifier and it tells Solidity to\r\n        // execute the rest of the code.\r\n        _;\r\n    }\r\n       modifier validAddress(address _addr) {\r\n        require(_addr != address(0), \"Not valid address\");\r\n        _;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ExampleContract.sol": {
				"ExampleContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ExampleContract.sol\":65:575  contract ExampleContract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ExampleContract.sol\":133:184  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/ExampleContract.sol\":166:176  msg.sender */\n  caller\n    /* \"contracts/ExampleContract.sol\":158:163  owner */\n  0x00\n  dup1\n    /* \"contracts/ExampleContract.sol\":158:176  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ExampleContract.sol\":65:575  contract ExampleContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ExampleContract.sol\":65:575  contract ExampleContract {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122031449e0571963714f3588272271799533a727d61a6ba82eb18601e76ca4597c964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603e8060595f395ff3fe60806040525f80fdfea264697066735822122031449e0571963714f3588272271799533a727d61a6ba82eb18601e76ca4597c964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3E DUP1 PUSH1 0x59 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PREVRANDAO SWAP15 SDIV PUSH18 0x963714F3588272271799533A727D61A6BA82 0xEB XOR PUSH1 0x1E PUSH23 0xCA4597C964736F6C634300081A00330000000000000000 ",
							"sourceMap": "65:510:0:-:0;;;133:51;;;;;;;;;;166:10;158:5;;:18;;;;;;;;;;;;;;;;;;65:510;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea264697066735822122031449e0571963714f3588272271799533a727d61a6ba82eb18601e76ca4597c964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PREVRANDAO SWAP15 SDIV PUSH18 0x963714F3588272271799533A727D61A6BA82 0xEB XOR PUSH1 0x1E PUSH23 0xCA4597C964736F6C634300081A00330000000000000000 ",
							"sourceMap": "65:510:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "24329",
								"totalCost": "36729"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 575,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 575,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 575,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 184,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 133,
									"end": 184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 133,
									"end": 184,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 133,
									"end": 184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 184,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 133,
									"end": 184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 133,
									"end": 184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 133,
									"end": 184,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 133,
									"end": 184,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 133,
									"end": 184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 133,
									"end": 184,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 166,
									"end": 176,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 158,
									"end": 163,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 158,
									"end": 163,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 158,
									"end": 176,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 158,
									"end": 176,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 158,
									"end": 176,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 158,
									"end": 176,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65,
									"end": 575,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 575,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 575,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 575,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 575,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 65,
									"end": 575,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 575,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031449e0571963714f3588272271799533a727d61a6ba82eb18601e76ca4597c964736f6c634300081a0033",
									".code": [
										{
											"begin": 65,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 575,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/ExampleContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExampleContract.sol\":\"ExampleContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ExampleContract.sol\":{\"keccak256\":\"0x1c6a32032697eb6a18d1ba26ece97cc55ea06210aa27e49628ab92c0e991a616\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69fcd464a10848d9bc40d8f80d91c2d0f00375638a95bef8b5d844f153bda18f\",\"dweb:/ipfs/QmYfAjw25xexCyShcUGKm3ihQtaURx3AY1rUPjH6iZvEqb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/ExampleContract.sol:ExampleContract",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ExampleContract.sol": {
				"ast": {
					"absolutePath": "contracts/ExampleContract.sol",
					"exportedSymbols": {
						"ExampleContract": [
							41
						]
					},
					"id": 42,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ExampleContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "ExampleContract",
							"nameLocation": "74:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "114:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 41,
									"src": "97:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "97:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "147:37:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "158:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "166:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "170:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "166:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "158:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "158:18:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "144:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "147:0:0"
									},
									"scope": 41,
									"src": "133:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "212:234:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "231:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "235:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "231:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 17,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "245:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "231:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "252:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "223:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "223:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "223:41:0"
											},
											{
												"id": 22,
												"nodeType": "PlaceholderStatement",
												"src": "437:1:0"
											}
										]
									},
									"id": 24,
									"name": "onlyOwner",
									"nameLocation": "200:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:2:0"
									},
									"src": "191:255:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "492:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 29,
																"name": "_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "511:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "528:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "520:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 30,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "520:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "520:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "511:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742076616c69642061646472657373",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "532:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d17f111d8107180607ed86ffb77564df19875349979563d887311241874db137",
																"typeString": "literal_string \"Not valid address\""
															},
															"value": "Not valid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d17f111d8107180607ed86ffb77564df19875349979563d887311241874db137",
																"typeString": "literal_string \"Not valid address\""
															}
														],
														"id": 28,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "503:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "503:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "503:49:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "563:1:0"
											}
										]
									},
									"id": 40,
									"name": "validAddress",
									"nameLocation": "464:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "485:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "477:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:15:0"
									},
									"src": "455:117:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 42,
							"src": "65:510:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:540:0"
				},
				"id": 0
			}
		}
	}
}